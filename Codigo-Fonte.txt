#include <WiFi.h>
#include <PubSubClient.h>
#include <DHTesp.h>

const int DHT_PIN = 15;
DHTesp dht;



const char* ssid = "Wokwi-GUEST";
const char* password = "";
const char* mqtt_server = "test.mosquitto.org";

WiFiClient espClient;
PubSubClient client(espClient);
unsigned long lastMsg = 0;
float temp = 0;


void setup_wifi() {
  delay(10);

  Serial.println();
  Serial.print("Conectando com ");
  Serial.println(ssid);

  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  randomSeed(micros());

  Serial.println("");
  Serial.println("WiFi conectado");
  Serial.println("Endereço IP: ");
  Serial.println(WiFi.localIP());
}

void callback(char* topic, byte* payload, unsigned int length) {
  Serial.print("Menssagem recebida [");
  Serial.print(topic);
  Serial.print("] ");
  for (int i = 0; i < length; i++) {
    Serial.print((char)payload[i]);
  }
  Serial.println();


  if ((char)payload[0] == '1') {
    digitalWrite(2, LOW);
  } else {
    digitalWrite(2, HIGH);
  }
}

void reconnect() {
  while (!client.connected()) {
    Serial.print("Tentando conectar com o MQTT...");

    String clientId = "ESP32Client-";
    clientId += String(random(0xffff), HEX);

    if (client.connect(clientId.c_str())) {
      Serial.println("Conectado");

      client.publish("/indobot/p/mqtt", "Indobot");
      client.subscribe("/indobot/p/mqtt");
    } else {
      Serial.print("Erro: ");
      Serial.print(client.state());
      Serial.println("Tente novamente em 5 segundos");

      delay(5000);
    }
  }
}

void setup() {
  pinMode(2, OUTPUT);
  pinMode(18, OUTPUT);
  pinMode(19, OUTPUT);
  pinMode(21, OUTPUT);
  Serial.begin(115200);
  setup_wifi();
  client.setServer(mqtt_server, 1883);
  client.setCallback(callback);
  dht.setup(DHT_PIN, DHTesp::DHT22);
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();

  unsigned long now = millis();
  if (now - lastMsg >= 10) {
    lastMsg = now;
    TempAndHumidity  data = dht.getTempAndHumidity();

    String temp = String(data.temperature, 2);
    client.publish("/indobot/p/temp", temp.c_str());

    Serial.print("Temperatura do cliente: ");
    Serial.println(temp);


    if (temp <= "35") {
      digitalWrite(19, HIGH);
      digitalWrite(21, LOW);
      digitalWrite(18, LOW);
      String msg =  "Não pode tomar a vacina! Temp muito baixa";
      client.publish("/status/temp", msg.c_str());
      delay(200);


    } else if (temp >= "39") {
      digitalWrite(21, HIGH);
      digitalWrite(19, LOW);
      digitalWrite(18, LOW);
      Serial.println("Não pode tomar a vacina! Temp muito alta");
      String msg =  "Não pode tomar a vacina! Temp muito alta";
      client.publish("/status/temp", msg.c_str());
      delay(200);

    } else if (temp > "35" && temp < "39") {
      digitalWrite(21, LOW);
      digitalWrite(19, LOW);
      digitalWrite(18, HIGH);
      Serial.println("Pode tomar a vacina!");
      String msg =  "Pode tomar a vacina!";
      client.publish("/status/temp", msg.c_str());
      delay(200);

    } else {
      digitalWrite(21, LOW);
      digitalWrite(19, LOW);
      digitalWrite(18, LOW);
      String msg =  "Aparelho desligado";
      client.publish("/status/temp", msg.c_str());
    }
  }
}